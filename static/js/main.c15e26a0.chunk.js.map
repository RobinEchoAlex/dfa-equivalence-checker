{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DfaAeField","id","this","props","wrapperId","TextField","inputfieldId","label","multiline","rows","placeholder","variant","React","Component","App","sendRequest","bind","displayResponse","response","status","json","then","data","document","getElementById","innerText","url","URL","params","dfa1","value","dfa2","search","URLSearchParams","fetch","className","Button","onClick","href","src","alt","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+TAIMA,E,4JAEJ,WACE,OACE,qBAAKC,GAAIC,KAAKC,MAAMC,UAApB,SAA+B,cAACC,EAAA,EAAD,CAC7BJ,GAAIC,KAAKC,MAAMG,aACfC,MAAOL,KAAKC,MAAMI,MAClBC,WAAS,EACTC,KAAM,GACNC,YAAaR,KAAKC,MAAMO,YACxBC,QAAQ,mB,GAVSC,IAAMC,WAgHdC,E,kDA/Ff,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBAHN,E,mDAMnB,SAAgBE,GAEU,MAApBA,EAASC,QAIbD,EAASE,OAAOC,MAAK,SAAAC,GACTC,SAASC,eAAe,SAC9BC,UAAYH,EAAKJ,c,yBAMzB,WAAe,IAAD,OACRQ,EAAM,IAAIC,IAAI,+CACdC,EAAS,GACTC,EAAON,SAASC,eAAe,oBAAoBM,MACnDC,EAAOR,SAASC,eAAe,oBAAoBM,MACvDF,EAAM,KAAWC,EACjBD,EAAM,KAAWG,EAEjBL,EAAIM,OAAS,IAAIC,gBAAgBL,GACjCM,MAAMR,GAAKL,MAAK,SAACC,GACf,EAAKL,gBAAgBK,Q,oBAIzB,WACE,OACE,sBAAKa,UAAU,MAAf,UACE,oBAAIlC,GAAI,QAAR,qCACA,cAACmC,EAAA,EAAD,CAAQnC,GAAI,YAAaU,QAAQ,YAAY0B,QAASnC,KAAKa,YAA3D,oBACA,qBAAKd,GAAI,WACT,cAAC,EAAD,CAAYG,UAAW,kBACXE,aAAc,mBACdC,MAAO,OACPG,YAAa,uBAGzB,cAAC,EAAD,CAAYN,UAAW,kBACXE,aAAc,mBACdC,MAAO,OACPG,YAAa,uBAGzB,sBAAKT,GAAI,cAAT,UACE,8CACA,yDAA2B,uBAA3B,6CAC4C,uBAD5C,4BAE2B,uBAF3B,kEAGiE,uBAHjE,kDAIiD,uBAJjD,oCAKmC,uBALnC,2CAM0C,uBAN1C,iDAQA,sBAAKA,GAAI,UAAT,UACE,yCACA,kCAAI,uBAAJ,cACa,uBADb,IAEG,uBAFH,MAGK,uBAHL,MAIK,uBAJL,MAKK,uBALL,MAMK,uBANL,MAOK,uBAPL,MAQK,uBARL,MASK,uBATL,IAUG,uBAVH,IAWG,uBAXH,WAaA,4BACE,mBACAqC,KAAK,sGADL,SAEA,qBACAC,IAAI,8EACJC,IAAI,0BAA0BC,OAAO,MAAMC,MAAM,yB,GAnF7C9B,IAAMC,WCRT8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAASC,eAAe,SAM1BmB,M","file":"static/js/main.c15e26a0.chunk.js","sourcesContent":["import './App.css';\nimport {Button, TextField} from '@material-ui/core';\nimport React from \"react\";\n\nclass DfaAeField extends React.Component {\n\n  render() {\n    return (\n      <div id={this.props.wrapperId}><TextField\n        id={this.props.inputfieldId}\n        label={this.props.label}\n        multiline\n        rows={10}\n        placeholder={this.props.placeholder}\n        variant=\"outlined\"\n      /></div>\n    )\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sendRequest = this.sendRequest.bind(this);\n    this.displayResponse = this.displayResponse.bind(this);\n  }\n\n  displayResponse(response) {\n    //console.log(response);\n    if (response.status !== 200) {\n      return;\n    }\n\n    response.json().then(data=>{\n      let dom = document.getElementById(\"title\");\n      dom.innerText = data.response;\n    })\n\n\n  }\n\n  sendRequest() {\n    let url = new URL(\"https://robinechoalex.azurewebsites.net/dfa\")\n    let params = {};\n    let dfa1 = document.getElementById(\"dfa1_allEncoding\").value;\n    let dfa2 = document.getElementById(\"dfa2_allEncoding\").value;\n    params['dfa1'] = dfa1;\n    params['dfa2'] = dfa2;\n    //console.log(params)\n    url.search = new URLSearchParams(params);\n    fetch(url).then((data) => {\n      this.displayResponse(data);\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 id={\"title\"}>DFA Equivalence checker</h1>\n        <Button id={\"submit_bt\"} variant=\"contained\" onClick={this.sendRequest}>Submit</Button>\n        <div id={\"result\"}/>\n        <DfaAeField wrapperId={\"dfa1_ae_wrapper\"}\n                    inputfieldId={\"dfa1_allEncoding\"}\n                    label={\"DFA1\"}\n                    placeholder={\"Enter 1st DFA Here\"}\n        >\n        </DfaAeField>\n        <DfaAeField wrapperId={\"dfa2_ae_wrapper\"}\n                    inputfieldId={\"dfa2_allEncoding\"}\n                    label={\"DFA2\"}\n                    placeholder={\"Enter 2nd DFA Here\"}\n        >\n        </DfaAeField>\n        <div id={\"instruction\"}>\n          <h4>Input format</h4>\n          <p>Line 1: Number of states<br/>\n            Line 2: Name of states, separated by space<br/>\n            Line 3: Number of Symbols<br/>\n            Line 4: Symbols in the alphabet, separated by space, must match<br/>\n            Line 5 onwards: Content of the transition table<br/>\n            Antepenultimate line: Start State<br/>\n            Penultimate line: Number of Final States<br/>\n            Last line: Final States, separated by space</p>\n          <div id={\"example\"}>\n            <h4>Example</h4>\n            <p>6<br/>\n              a b c d e f<br/>\n              2<br/>\n              a b<br/>\n              b c<br/>\n              a d<br/>\n              e f<br/>\n              e f<br/>\n              e f<br/>\n              f f<br/>\n              a<br/>\n              3<br/>\n              d c e</p>\n            <p>\n              <a\n              href=\"https://commons.wikimedia.org/wiki/File:DFA_to_be_minimized.jpg#/media/File:DFA_to_be_minimized.jpg\">\n              <img\n              src=\"https://upload.wikimedia.org/wikipedia/commons/c/cd/DFA_to_be_minimized.jpg\"\n              alt=\"DFA to be minimized.jpg\" height=\"196\" width=\"300\"></img>\n              </a>\n            </p>\n          </div>\n        </div>\n\n      </div>\n  );\n  }\n\n\n  }\n\n  export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}